{
  "name": "gmapping",
  "modules": [
    "@com_nvidia_isaac//packages/lidar_slam:g_mapping",
    "@com_nvidia_isaac//packages/navigation"
  ],
  "graph": {
    "nodes": [
      {
        "name": "gmapping",
        "components": [
          {
            "name": "message_ledger",
            "type": "isaac::alice::MessageLedger"
          },
          {
            "name": "gmapping",
            "type": "isaac::lidar_slam::GMapping"
          }
        ]
      },
      {
       "name": "obstacle_atlas",
       "components": [
         {
           "name": "obstacle_atlas",
           "type": "isaac::map::ObstacleAtlas"
         }
       ]
      },
      {
        "name": "odometry",
        "subgraph": "@com_nvidia_isaac//packages/navigation/apps/differential_base_imu_odometry.subgraph.json"
      },
      {
        "name": "local_map",
        "subgraph": "@com_nvidia_isaac//packages/navigation/apps/local_map.subgraph.json"
      },
      {
        "name": "2d_ev3",
        "subgraph": "apps/ev3/2d_ev3.subgraph.json"
      },
      {
        "name": "commander",
        "subgraph": "@com_nvidia_isaac//packages/navigation/apps/differential_base_commander.subgraph.json"
      },
      {
        "name": "record",
        "subgraph": "@com_nvidia_isaac//packages/record_replay/apps/record.subgraph.json"
      }
    ],
    "edges": [
      {
        "source": "2d_ev3.subgraph/interface/flatscan",
        "target": "gmapping/gmapping/flatscan"
      },
      {
        "source": "2d_ev3.subgraph/interface/flatscan",
        "target": "local_map.subgraph/interface/flatscan"
      },
      {
        "source": "2d_ev3.subgraph/interface/base_state",
        "target": "odometry.subgraph/interface/state"
      },
      {
        "source": "commander.subgraph/interface/command",
        "target": "2d_ev3.subgraph/interface/base_command"
      },
      {
        "source": "odometry.subgraph/interface/odometry",
        "target": "gmapping/gmapping/odometry"
      },
      {
        "source": "2d_ev3.ev3_hardware.subgraph/interface/scan",
        "target": "record.interface/input/fullscan"
      },
      {
        "source": "2d_ev3.subgraph/interface/base_state",
        "target": "record.interface/input/state"
      }
    ]
  },
  "config": {
    "odometry.odometry": {
      "DifferentialBaseWheelImuOdometry": {
        "use_imu": false
      }
    },
    "gmapping": {
      "gmapping": {
        "file_path": "/tmp",
        "build_map_period": 1.0,
        "laser_matcher_resolution": 0.2,
        "map_x_max": 5.0,
        "map_x_min": -5.0,
        "map_y_max": 5.0,
        "map_y_min": -5.0,
        "map_resolution": 0.01,
        "max_range": 3,
        "map_update_range": 1.0,
        "number_particles": 10,
        "linear_distance": 0.1,
        "angular_distance": 0.1,
        "use_pose_tree": false
      }
    },
    "local_map.local_map": {
      "isaac.navigation.BinaryToDistanceMap": {
        "obstacle_name": ""
      }
    },
    "commander.robot_remote": {
      "isaac.navigation.RobotRemoteControl": {
        "angular_speed_max": 0.1,
        "linear_speed_max": 0.1
      }
    },
    "websight": {
      "WebsightServer": {
        "port": 3000,
        "webroot": "external/com_nvidia_isaac/packages/sight/webroot",
        "ui_config": {
          "windows": {
            "GMapping: Mapping View": {
              "renderer": "2d",
              "dims": {
                "width": 1024,
                "height": 1024
              },
              "channels": [
                { "name": "gmapping/gmapping/gmapping/global_map" },
                { "name": "gmapping/gmapping/gmapping/fov_cone" },
                { "name": "gmapping/gmapping/gmapping/robot_pos" }
              ]
            },
            "GMapping: Local View": {
              "renderer": "2d",
              "dims": {
                "width": 512,
                "height": 512
              },
              "channels": [
                { "name": "gmapping/local_map.local_map/isaac.navigation.LocalMap/local_map" }
              ]
            }
          }
        }
      }
    }
  }
}
